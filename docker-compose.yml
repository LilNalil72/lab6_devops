# УДАЛИТЬ ЭТУ СТРОКУ: version: "3.8"

volumes:
  pg_data:  # Используем стандартный Docker volume

services:
  postgres:
    image: postgres:14
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data  # Используем именованный том
    environment:
      POSTGRES_DB: hospital
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  app_registry:
    image: ${IMAGE_OWNER}/app_registry:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: hospital
      DB_USER: admin
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    ports:
      - "8000:8000"

  app_schedule:
    image: ${IMAGE_OWNER}/app_schedule:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: hospital
      DB_USER: admin
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    ports:
      - "8001:8000"

  db_migrations:
    image: ${IMAGE_OWNER}/db_migrations:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: hospital
      DB_USER: admin
      DB_PASSWORD: ${POSTGRES_PASSWORD}

  # Добавляем Prometheus для сбора метрик
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: always
    depends_on:
      - app_registry
      - app_schedule

  # Добавляем Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    ports:
      - "3000:3000"
    restart: always

volumes:
  grafana_data: