name: Build, Push and Deploy

on:
  push:
    branches: [notmain]
  workflow_dispatch:  # Разрешить ручной запуск

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Registry Service
        uses: docker/build-push-action@v4
        with:
          context: ./app_registry
          file: ./app_registry/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/app_registry:latest
            ${{ env.DOCKERHUB_USERNAME }}/app_registry:${{ github.sha }}

      - name: Build & Push Schedule Service
        uses: docker/build-push-action@v4
        with:
          context: ./app_schedule
          file: ./app_schedule/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/app_schedule:latest
            ${{ env.DOCKERHUB_USERNAME }}/app_schedule:${{ github.sha }}

      - name: Build & Push DB Migrations
        uses: docker/build-push-action@v4
        with:
          context: ./db_migrations
          file: ./db_migrations/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/db_migrations:latest
            ${{ env.DOCKERHUB_USERNAME }}/db_migrations:${{ github.sha }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build  # Зависит от успешного выполнения сборки
    steps:
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          script: |
            # Переходим в рабочую директорию
            cd /opt/hospital
            
            # Останавливаем текущие контейнеры
            docker-compose down --remove-orphans
            
            # Получаем новые образы из Docker Hub
            docker-compose pull
            
            # Запускаем обновленные контейнеры
            docker-compose up -d --build
            
            # Применяем миграции БД (если контейнер не запускается автоматически)
            docker run --rm \
              --network hospital_default \
              -e DB_HOST=postgres \
              -e DB_PORT=5432 \
              -e DB_NAME=hospital \
              -e DB_USER=admin \
              -e DB_PASSWORD=securepass \
              ${{ env.DOCKERHUB_USERNAME }}/db_migrations:latest
            
            # Проверяем состояние
            docker ps
            echo "Deployment completed at $(date)"
          env:
            DOCKERHUB_USERNAME: ${{ env.DOCKERHUB_USERNAME }}