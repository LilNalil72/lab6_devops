name: Build, Push and Deploy

on:
  push:
    branches: [notmain]
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Registry Service
        uses: docker/build-push-action@v4
        with:
          context: ./app_registry
          file: ./app_registry/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/app_registry:latest
            ${{ env.DOCKERHUB_USERNAME }}/app_registry:${{ github.sha }}

      - name: Build & Push Schedule Service
        uses: docker/build-push-action@v4
        with:
          context: ./app_schedule
          file: ./app_schedule/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/app_schedule:latest
            ${{ env.DOCKERHUB_USERNAME }}/app_schedule:${{ github.sha }}

      - name: Build & Push DB Migrations
        uses: docker/build-push-action@v4
        with:
          context: ./db_migrations
          file: ./db_migrations/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/db_migrations:latest
            ${{ env.DOCKERHUB_USERNAME }}/db_migrations:${{ github.sha }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS || 'github.com' }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          script: |
            cd /opt/hospital
            docker-compose down --remove-orphans
            docker-compose pull
            docker-compose up -d
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
            curl --retry 3 --retry-delay 5 http://localhost:8000/health
            curl --retry 3 --retry-delay 5 http://localhost:8001/health
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
            docker run --rm \
              --network hospital_default \
              -e DB_HOST=postgres \
              -e DB_PORT=5432 \
              -e DB_NAME=hospital \
              -e DB_USER=admin \
              -e DB_PASSWORD=securepass \
              ${{ env.DOCKERHUB_USERNAME }}/db_migrations:latest
            
            echo "üü¢ Deployment successful! $(date)"